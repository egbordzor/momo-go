// Code generated by goa v3.1.2, DO NOT EDIT.
//
// user client
//
// Command:
// $ goa gen github.com/wondenge/momo-go/user/design

package user

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Client is the "user" service client.
type Client struct {
	CreateuserEndpoint endpoint.Endpoint
	CreatekeyEndpoint  endpoint.Endpoint
	ListEndpoint       endpoint.Endpoint
	ShowEndpoint       endpoint.Endpoint
}

// NewClient initializes a "user" service client given the endpoints.
func NewClient(createuser, createkey, list, show endpoint.Endpoint) *Client {
	return &Client{
		CreateuserEndpoint: createuser,
		CreatekeyEndpoint:  createkey,
		ListEndpoint:       list,
		ShowEndpoint:       show,
	}
}

// Createuser calls the "createuser" endpoint of the "user" service.
func (c *Client) Createuser(ctx context.Context, p *CreateuserPayload) (res *Errorreason, err error) {
	var ires interface{}
	ires, err = c.CreateuserEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Errorreason), nil
}

// Createkey calls the "createkey" endpoint of the "user" service.
func (c *Client) Createkey(ctx context.Context, p *CreatekeyPayload) (res *Errorreason, err error) {
	var ires interface{}
	ires, err = c.CreatekeyEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Errorreason), nil
}

// List calls the "list" endpoint of the "user" service.
func (c *Client) List(ctx context.Context, p *ListPayload) (res *Errorreason, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Errorreason), nil
}

// Show calls the "show" endpoint of the "user" service.
func (c *Client) Show(ctx context.Context, p *ShowPayload) (res *Errorreason, err error) {
	var ires interface{}
	ires, err = c.ShowEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Errorreason), nil
}

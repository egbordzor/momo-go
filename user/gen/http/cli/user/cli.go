// Code generated by goa v3.1.2, DO NOT EDIT.
//
// user HTTP client CLI support package
//
// Command:
// $ goa gen github.com/wondenge/momo-go/user/design

package cli

import (
	"flag"
	"fmt"
	"net/http"
	"os"

	"github.com/go-kit/kit/endpoint"
	userc "github.com/wondenge/momo-go/user/gen/http/user/client"
	goahttp "goa.design/goa/v3/http"
)

// UsageCommands returns the set of commands and sub-commands using the format
//
//    command (subcommand1|subcommand2|...)
//
func UsageCommands() string {
	return `user (createuser|createkey|list|show)
`
}

// UsageExamples produces an example of a valid invocation of the CLI tool.
func UsageExamples() string {
	return os.Args[0] + ` user createuser --x-reference-id "c72025f5-5cd1-4630-99e4-8ba4722fad56" --ocp-apim-subscription-key "d484a1f0d34f4301916d0f2c9e9106a2"` + "\n" +
		""
}

// ParseEndpoint returns the endpoint and payload as specified on the command
// line.
func ParseEndpoint(
	scheme, host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restore bool,
) (endpoint.Endpoint, interface{}, error) {
	var (
		userFlags = flag.NewFlagSet("user", flag.ContinueOnError)

		userCreateuserFlags                      = flag.NewFlagSet("createuser", flag.ExitOnError)
		userCreateuserXReferenceIDFlag           = userCreateuserFlags.String("x-reference-id", "REQUIRED", "")
		userCreateuserOcpApimSubscriptionKeyFlag = userCreateuserFlags.String("ocp-apim-subscription-key", "REQUIRED", "")

		userCreatekeyFlags                      = flag.NewFlagSet("createkey", flag.ExitOnError)
		userCreatekeyBodyFlag                   = userCreatekeyFlags.String("body", "REQUIRED", "")
		userCreatekeyOcpApimSubscriptionKeyFlag = userCreatekeyFlags.String("ocp-apim-subscription-key", "REQUIRED", "")

		userListFlags                      = flag.NewFlagSet("list", flag.ExitOnError)
		userListBodyFlag                   = userListFlags.String("body", "REQUIRED", "")
		userListOcpApimSubscriptionKeyFlag = userListFlags.String("ocp-apim-subscription-key", "REQUIRED", "")

		userShowFlags                      = flag.NewFlagSet("show", flag.ExitOnError)
		userShowAPIUserFlag                = userShowFlags.String("api-user", "REQUIRED", "API User.")
		userShowOcpApimSubscriptionKeyFlag = userShowFlags.String("ocp-apim-subscription-key", "REQUIRED", "")
	)
	userFlags.Usage = userUsage
	userCreateuserFlags.Usage = userCreateuserUsage
	userCreatekeyFlags.Usage = userCreatekeyUsage
	userListFlags.Usage = userListUsage
	userShowFlags.Usage = userShowUsage

	if err := flag.CommandLine.Parse(os.Args[1:]); err != nil {
		return nil, nil, err
	}

	if flag.NArg() < 2 { // two non flag args are required: SERVICE and ENDPOINT (aka COMMAND)
		return nil, nil, fmt.Errorf("not enough arguments")
	}

	var (
		svcn string
		svcf *flag.FlagSet
	)
	{
		svcn = flag.Arg(0)
		switch svcn {
		case "user":
			svcf = userFlags
		default:
			return nil, nil, fmt.Errorf("unknown service %q", svcn)
		}
	}
	if err := svcf.Parse(flag.Args()[1:]); err != nil {
		return nil, nil, err
	}

	var (
		epn string
		epf *flag.FlagSet
	)
	{
		epn = svcf.Arg(0)
		switch svcn {
		case "user":
			switch epn {
			case "createuser":
				epf = userCreateuserFlags

			case "createkey":
				epf = userCreatekeyFlags

			case "list":
				epf = userListFlags

			case "show":
				epf = userShowFlags

			}

		}
	}
	if epf == nil {
		return nil, nil, fmt.Errorf("unknown %q endpoint %q", svcn, epn)
	}

	// Parse endpoint flags if any
	if svcf.NArg() > 1 {
		if err := epf.Parse(svcf.Args()[1:]); err != nil {
			return nil, nil, err
		}
	}

	var (
		data     interface{}
		endpoint endpoint.Endpoint
		err      error
	)
	{
		switch svcn {
		case "user":
			c := userc.NewClient(scheme, host, doer, enc, dec, restore)
			switch epn {
			case "createuser":
				endpoint = c.Createuser()
				data, err = userc.BuildCreateuserPayload(*userCreateuserXReferenceIDFlag, *userCreateuserOcpApimSubscriptionKeyFlag)
			case "createkey":
				endpoint = c.Createkey()
				data, err = userc.BuildCreatekeyPayload(*userCreatekeyBodyFlag, *userCreatekeyOcpApimSubscriptionKeyFlag)
			case "list":
				endpoint = c.List()
				data, err = userc.BuildListPayload(*userListBodyFlag, *userListOcpApimSubscriptionKeyFlag)
			case "show":
				endpoint = c.Show()
				data, err = userc.BuildShowPayload(*userShowAPIUserFlag, *userShowOcpApimSubscriptionKeyFlag)
			}
		}
	}
	if err != nil {
		return nil, nil, err
	}

	return endpoint, data, nil
}

// userUsage displays the usage of the user command and its subcommands.
func userUsage() {
	fmt.Fprintf(os.Stderr, `Service is the user service interface.
Usage:
    %s [globalflags] user COMMAND [flags]

COMMAND:
    createuser: Used to create an API user in the sandbox target environment
    createkey: Used to create an API key for an API user in the sandbox target environment.
    list: Used to get API user information.
    show: GET API User Details

Additional help:
    %s user COMMAND --help
`, os.Args[0], os.Args[0])
}
func userCreateuserUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] user createuser -x-reference-id STRING -ocp-apim-subscription-key STRING

Used to create an API user in the sandbox target environment
    -x-reference-id STRING: 
    -ocp-apim-subscription-key STRING: 

Example:
    `+os.Args[0]+` user createuser --x-reference-id "c72025f5-5cd1-4630-99e4-8ba4722fad56" --ocp-apim-subscription-key "d484a1f0d34f4301916d0f2c9e9106a2"
`, os.Args[0])
}

func userCreatekeyUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] user createkey -body JSON -ocp-apim-subscription-key STRING

Used to create an API key for an API user in the sandbox target environment.
    -body JSON: 
    -ocp-apim-subscription-key STRING: 

Example:
    `+os.Args[0]+` user createkey --body '{
      "X-Reference-Id": "c72025f5-5cd1-4630-99e4-8ba4722fad56"
   }' --ocp-apim-subscription-key "d484a1f0d34f4301916d0f2c9e9106a2"
`, os.Args[0])
}

func userListUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] user list -body JSON -ocp-apim-subscription-key STRING

Used to get API user information.
    -body JSON: 
    -ocp-apim-subscription-key STRING: 

Example:
    `+os.Args[0]+` user list --body '{
      "X-Reference-Id": "c72025f5-5cd1-4630-99e4-8ba4722fad56"
   }' --ocp-apim-subscription-key "d484a1f0d34f4301916d0f2c9e9106a2"
`, os.Args[0])
}

func userShowUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] user show -api-user STRING -ocp-apim-subscription-key STRING

GET API User Details
    -api-user STRING: API User.
    -ocp-apim-subscription-key STRING: 

Example:
    `+os.Args[0]+` user show --api-user "c72025f5-5cd1-4630-99e4-8ba4722fad56" --ocp-apim-subscription-key "d484a1f0d34f4301916d0f2c9e9106a2"
`, os.Args[0])
}

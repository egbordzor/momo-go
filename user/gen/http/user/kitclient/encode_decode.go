// Code generated by goa v3.1.2, DO NOT EDIT.
//
// user go-kit HTTP client encoders and decoders
//
// Command:
// $ goa gen github.com/wondenge/momo-go/user/design

package client

import (
	"context"
	"net/http"

	kithttp "github.com/go-kit/kit/transport/http"
	"github.com/wondenge/momo-go/user/gen/http/user/client"
	goahttp "goa.design/goa/v3/http"
)

// EncodeCreateuserRequest returns a go-kit EncodeRequestFunc suitable for
// encoding user createuser requests.
func EncodeCreateuserRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeCreateuserRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeCreateuserResponse returns a go-kit DecodeResponseFunc suitable for
// decoding user createuser responses.
func DecodeCreateuserResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeCreateuserResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeCreatekeyRequest returns a go-kit EncodeRequestFunc suitable for
// encoding user createkey requests.
func EncodeCreatekeyRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeCreatekeyRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeCreatekeyResponse returns a go-kit DecodeResponseFunc suitable for
// decoding user createkey responses.
func DecodeCreatekeyResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeCreatekeyResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeListRequest returns a go-kit EncodeRequestFunc suitable for encoding
// user list requests.
func EncodeListRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeListRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeListResponse returns a go-kit DecodeResponseFunc suitable for decoding
// user list responses.
func DecodeListResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeListResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeShowRequest returns a go-kit EncodeRequestFunc suitable for encoding
// user show requests.
func EncodeShowRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeShowRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeShowResponse returns a go-kit DecodeResponseFunc suitable for decoding
// user show responses.
func DecodeShowResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeShowResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// Code generated by goa v3.1.2, DO NOT EDIT.
//
// user go-kit HTTP server encoders and decoders
//
// Command:
// $ goa gen github.com/wondenge/momo-go/user/design

package server

import (
	"net/http"

	goahttp "goa.design/goa/v3/http"
)

// MountCreateuserHandler configures the mux to serve the "user" service
// "createuser" endpoint.
func MountCreateuserHandler(mux goahttp.Muxer, h http.Handler) {
	f, ok := h.(http.HandlerFunc)
	if !ok {
		f = func(w http.ResponseWriter, r *http.Request) {
			h.ServeHTTP(w, r)
		}
	}
	mux.Handle("POST", "/v1_0/apiuser/", f)
}

// MountCreatekeyHandler configures the mux to serve the "user" service
// "createkey" endpoint.
func MountCreatekeyHandler(mux goahttp.Muxer, h http.Handler) {
	f, ok := h.(http.HandlerFunc)
	if !ok {
		f = func(w http.ResponseWriter, r *http.Request) {
			h.ServeHTTP(w, r)
		}
	}
	mux.Handle("POST", "/v1_0/apiuser/{X-Reference-Id}/apikey", f)
}

// MountListHandler configures the mux to serve the "user" service "list"
// endpoint.
func MountListHandler(mux goahttp.Muxer, h http.Handler) {
	f, ok := h.(http.HandlerFunc)
	if !ok {
		f = func(w http.ResponseWriter, r *http.Request) {
			h.ServeHTTP(w, r)
		}
	}
	mux.Handle("GET", "/v1_0/apiuser/{X-Reference-Id}", f)
}

// MountShowHandler configures the mux to serve the "user" service "show"
// endpoint.
func MountShowHandler(mux goahttp.Muxer, h http.Handler) {
	f, ok := h.(http.HandlerFunc)
	if !ok {
		f = func(w http.ResponseWriter, r *http.Request) {
			h.ServeHTTP(w, r)
		}
	}
	mux.Handle("GET", "/v1_0/apiuser/apiuser/{APIUser}", f)
}

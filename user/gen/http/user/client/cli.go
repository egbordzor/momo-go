// Code generated by goa v3.1.2, DO NOT EDIT.
//
// user HTTP client CLI support package
//
// Command:
// $ goa gen github.com/wondenge/momo-go/user/design

package client

import (
	"encoding/json"
	"fmt"

	user "github.com/wondenge/momo-go/user/gen/user"
)

// BuildCreateuserPayload builds the payload for the user createuser endpoint
// from CLI flags.
func BuildCreateuserPayload(userCreateuserXReferenceID string, userCreateuserOcpApimSubscriptionKey string) (*user.CreateuserPayload, error) {
	var xReferenceID string
	{
		xReferenceID = userCreateuserXReferenceID
	}
	var ocpApimSubscriptionKey string
	{
		ocpApimSubscriptionKey = userCreateuserOcpApimSubscriptionKey
	}
	v := &user.CreateuserPayload{}
	v.XReferenceID = xReferenceID
	v.OcpApimSubscriptionKey = ocpApimSubscriptionKey

	return v, nil
}

// BuildCreatekeyPayload builds the payload for the user createkey endpoint
// from CLI flags.
func BuildCreatekeyPayload(userCreatekeyBody string, userCreatekeyOcpApimSubscriptionKey string) (*user.CreatekeyPayload, error) {
	var err error
	var body CreatekeyRequestBody
	{
		err = json.Unmarshal([]byte(userCreatekeyBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"X-Reference-Id\": \"c72025f5-5cd1-4630-99e4-8ba4722fad56\"\n   }'")
		}
	}
	var ocpApimSubscriptionKey string
	{
		ocpApimSubscriptionKey = userCreatekeyOcpApimSubscriptionKey
	}
	v := &user.CreatekeyPayload{
		XReferenceID: body.XReferenceID,
	}
	v.OcpApimSubscriptionKey = ocpApimSubscriptionKey

	return v, nil
}

// BuildListPayload builds the payload for the user list endpoint from CLI
// flags.
func BuildListPayload(userListBody string, userListOcpApimSubscriptionKey string) (*user.ListPayload, error) {
	var err error
	var body ListRequestBody
	{
		err = json.Unmarshal([]byte(userListBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"X-Reference-Id\": \"c72025f5-5cd1-4630-99e4-8ba4722fad56\"\n   }'")
		}
	}
	var ocpApimSubscriptionKey string
	{
		ocpApimSubscriptionKey = userListOcpApimSubscriptionKey
	}
	v := &user.ListPayload{
		XReferenceID: body.XReferenceID,
	}
	v.OcpApimSubscriptionKey = ocpApimSubscriptionKey

	return v, nil
}

// BuildShowPayload builds the payload for the user show endpoint from CLI
// flags.
func BuildShowPayload(userShowAPIUser string, userShowOcpApimSubscriptionKey string) (*user.ShowPayload, error) {
	var aPIUser string
	{
		aPIUser = userShowAPIUser
	}
	var ocpApimSubscriptionKey string
	{
		ocpApimSubscriptionKey = userShowOcpApimSubscriptionKey
	}
	v := &user.ShowPayload{}
	v.APIUser = aPIUser
	v.OcpApimSubscriptionKey = ocpApimSubscriptionKey

	return v, nil
}

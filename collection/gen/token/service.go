// Code generated by goa v3.1.2, DO NOT EDIT.
//
// token service
//
// Command:
// $ goa gen github.com/wondenge/momo-go/collection/design

package token

import (
	"context"

	goa "goa.design/goa/v3/pkg"
	"goa.design/goa/v3/security"
)

// Service is the token service interface.
type Service interface {
	// Creates an Access Token.
	Create(context.Context, *CreatePayload) (res *OAuthTokenError, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// BasicAuth implements the authorization logic for the Basic security scheme.
	BasicAuth(ctx context.Context, user, pass string, schema *security.BasicScheme) (context.Context, error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "token"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"create"}

// Credentials used to authenticate to retrieve JWT token
type CreatePayload struct {
	// Subscription Key.
	OcpApimSubscriptionKey *string
	// API Key
	APIKey string
	// API Secret
	APISecret string
}

// OAuthTokenError is the result type of the token service create method.
type OAuthTokenError struct {
	// An error code.
	Error *string
}

// MakeInternalError builds a goa.ServiceError from an error.
func MakeInternalError(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "internal_error",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeBadRequest builds a goa.ServiceError from an error.
func MakeBadRequest(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "bad_request",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

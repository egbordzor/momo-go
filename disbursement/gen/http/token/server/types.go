// Code generated by goa v3.1.2, DO NOT EDIT.
//
// token HTTP server types
//
// Command:
// $ goa gen github.com/wondenge/momo-go/disbursement/design

package server

import (
	token "github.com/wondenge/momo-go/disbursement/gen/token"
	goa "goa.design/goa/v3/pkg"
)

// CreateResponseBody is the type of the "token" service "create" endpoint HTTP
// response body.
type CreateResponseBody struct {
	// An error code.
	Error *string `form:"error,omitempty" json:"error,omitempty" xml:"error,omitempty"`
}

// CreateInternalErrorResponseBody is the type of the "token" service "create"
// endpoint HTTP response body for the "internal_error" error.
type CreateInternalErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// NewCreateResponseBody builds the HTTP response body from the result of the
// "create" endpoint of the "token" service.
func NewCreateResponseBody(res *token.OAuthTokenError) *CreateResponseBody {
	body := &CreateResponseBody{
		Error: res.Error,
	}
	return body
}

// NewCreateInternalErrorResponseBody builds the HTTP response body from the
// result of the "create" endpoint of the "token" service.
func NewCreateInternalErrorResponseBody(res *goa.ServiceError) *CreateInternalErrorResponseBody {
	body := &CreateInternalErrorResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCreatePayload builds a token service create endpoint payload.
func NewCreatePayload(ocpApimSubscriptionKey string) *token.CreatePayload {
	v := &token.CreatePayload{}
	v.OcpApimSubscriptionKey = &ocpApimSubscriptionKey

	return v
}

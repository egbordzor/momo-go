// Code generated by goa v3.1.2, DO NOT EDIT.
//
// transfer views
//
// Command:
// $ goa gen github.com/wondenge/momo-go/remittance/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// Errorreason is the viewed result type that is projected based on a view.
type Errorreason struct {
	// Type to project
	Projected *ErrorreasonView
	// View to render
	View string
}

// ErrorreasonView is a type that runs validations on a projected type.
type ErrorreasonView struct {
	Code *string
	// message
	Message *string
}

var (
	// ErrorreasonMap is a map of attribute names in result type Errorreason
	// indexed by view name.
	ErrorreasonMap = map[string][]string{
		"default": []string{
			"code",
			"message",
		},
	}
)

// ValidateErrorreason runs the validations defined on the viewed result type
// Errorreason.
func ValidateErrorreason(result *Errorreason) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateErrorreasonView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateErrorreasonView runs the validations defined on ErrorreasonView
// using the "default" view.
func ValidateErrorreasonView(result *ErrorreasonView) (err error) {
	if result.Code != nil {
		if !(*result.Code == "PAYEE_NOT_FOUND" || *result.Code == "PAYER_NOT_FOUND" || *result.Code == "NOT_ALLOWED" || *result.Code == "NOT_ALLOWED_TARGET_ENVIRONMENT" || *result.Code == "INVALID_CALLBACK_URL_HOST" || *result.Code == "INVALID_CURRENCY" || *result.Code == "SERVICE_UNAVAILABLE" || *result.Code == "INTERNAL_PROCESSING_ERROR" || *result.Code == "NOT_ENOUGH_FUNDS" || *result.Code == "PAYER_LIMIT_REACHED" || *result.Code == "PAYEE_NOT_ALLOWED_TO_RECEIVE" || *result.Code == "PAYMENT_NOT_APPROVED" || *result.Code == "RESOURCE_NOT_FOUND" || *result.Code == "APPROVAL_REJECTED" || *result.Code == "EXPIRED" || *result.Code == "TRANSACTION_CANCELED" || *result.Code == "RESOURCE_ALREADY_EXIST") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("result.code", *result.Code, []interface{}{"PAYEE_NOT_FOUND", "PAYER_NOT_FOUND", "NOT_ALLOWED", "NOT_ALLOWED_TARGET_ENVIRONMENT", "INVALID_CALLBACK_URL_HOST", "INVALID_CURRENCY", "SERVICE_UNAVAILABLE", "INTERNAL_PROCESSING_ERROR", "NOT_ENOUGH_FUNDS", "PAYER_LIMIT_REACHED", "PAYEE_NOT_ALLOWED_TO_RECEIVE", "PAYMENT_NOT_APPROVED", "RESOURCE_NOT_FOUND", "APPROVAL_REJECTED", "EXPIRED", "TRANSACTION_CANCELED", "RESOURCE_ALREADY_EXIST"}))
		}
	}
	return
}

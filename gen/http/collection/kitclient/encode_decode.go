// Code generated by goa v3.1.3, DO NOT EDIT.
//
// collection go-kit HTTP client encoders and decoders
//
// Command:
// $ goa gen github.com/wondenge/momo-go/design

package client

import (
	"context"
	"net/http"

	kithttp "github.com/go-kit/kit/transport/http"
	"github.com/wondenge/momo-go/gen/http/collection/client"
	goahttp "goa.design/goa/v3/http"
)

// EncodeNewTokenRequest returns a go-kit EncodeRequestFunc suitable for
// encoding collection NewToken requests.
func EncodeNewTokenRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeNewTokenRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeNewTokenResponse returns a go-kit DecodeResponseFunc suitable for
// decoding collection NewToken responses.
func DecodeNewTokenResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeNewTokenResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeGetBalanceRequest returns a go-kit EncodeRequestFunc suitable for
// encoding collection GetBalance requests.
func EncodeGetBalanceRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeGetBalanceRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeGetBalanceResponse returns a go-kit DecodeResponseFunc suitable for
// decoding collection GetBalance responses.
func DecodeGetBalanceResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeGetBalanceResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// DecodeRetrieveAccountHolderResponse returns a go-kit DecodeResponseFunc
// suitable for decoding collection RetrieveAccountHolder responses.
func DecodeRetrieveAccountHolderResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeRetrieveAccountHolderResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodePaymentRequestRequest returns a go-kit EncodeRequestFunc suitable for
// encoding collection PaymentRequest requests.
func EncodePaymentRequestRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodePaymentRequestRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodePaymentRequestResponse returns a go-kit DecodeResponseFunc suitable
// for decoding collection PaymentRequest responses.
func DecodePaymentRequestResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodePaymentRequestResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// DecodePaymentStatusResponse returns a go-kit DecodeResponseFunc suitable for
// decoding collection PaymentStatus responses.
func DecodePaymentStatusResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodePaymentStatusResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

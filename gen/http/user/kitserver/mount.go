// Code generated by goa v3.1.3, DO NOT EDIT.
//
// User go-kit HTTP server encoders and decoders
//
// Command:
// $ goa gen github.com/wondenge/momo-go/design

package server

import (
	"net/http"

	goahttp "goa.design/goa/v3/http"
)

// MountNewUserHandler configures the mux to serve the "User" service "NewUser"
// endpoint.
func MountNewUserHandler(mux goahttp.Muxer, h http.Handler) {
	f, ok := h.(http.HandlerFunc)
	if !ok {
		f = func(w http.ResponseWriter, r *http.Request) {
			h.ServeHTTP(w, r)
		}
	}
	mux.Handle("POST", "/v1_0/apiuser", f)
}

// MountNewKeyHandler configures the mux to serve the "User" service "NewKey"
// endpoint.
func MountNewKeyHandler(mux goahttp.Muxer, h http.Handler) {
	f, ok := h.(http.HandlerFunc)
	if !ok {
		f = func(w http.ResponseWriter, r *http.Request) {
			h.ServeHTTP(w, r)
		}
	}
	mux.Handle("POST", "/v1_0/apiuser/{X-Reference-Id}/apikey", f)
}

// MountGetUserHandler configures the mux to serve the "User" service "GetUser"
// endpoint.
func MountGetUserHandler(mux goahttp.Muxer, h http.Handler) {
	f, ok := h.(http.HandlerFunc)
	if !ok {
		f = func(w http.ResponseWriter, r *http.Request) {
			h.ServeHTTP(w, r)
		}
	}
	mux.Handle("GET", "/v1_0/apiuser/{X-Reference-Id}", f)
}

// MountGetUserDetailsHandler configures the mux to serve the "User" service
// "GetUserDetails" endpoint.
func MountGetUserDetailsHandler(mux goahttp.Muxer, h http.Handler) {
	f, ok := h.(http.HandlerFunc)
	if !ok {
		f = func(w http.ResponseWriter, r *http.Request) {
			h.ServeHTTP(w, r)
		}
	}
	mux.Handle("GET", "/apiuser/{APIUser}", f)
}

// Code generated by goa v3.1.3, DO NOT EDIT.
//
// user HTTP client CLI support package
//
// Command:
// $ goa gen github.com/wondenge/momo-go/design

package client

import (
	"encoding/json"
	"fmt"

	user "github.com/wondenge/momo-go/gen/user"
)

// BuildNewUserPayload builds the payload for the user NewUser endpoint from
// CLI flags.
func BuildNewUserPayload(userNewUserBody string) (*user.APIUser, error) {
	var err error
	var body NewUserRequestBody
	{
		err = json.Unmarshal([]byte(userNewUserBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"providerCallbackHost\": \"Sunt quia nostrum corrupti.\"\n   }'")
		}
	}
	v := &user.APIUser{
		ProviderCallbackHost: body.ProviderCallbackHost,
	}

	return v, nil
}

// BuildNewKeyPayload builds the payload for the user NewKey endpoint from CLI
// flags.
func BuildNewKeyPayload(userNewKeyBody string) (*user.NewKeyPayload, error) {
	var err error
	var body NewKeyRequestBody
	{
		err = json.Unmarshal([]byte(userNewKeyBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"X-Reference-Id\": \"Tempore non et vel esse doloribus.\"\n   }'")
		}
	}
	v := &user.NewKeyPayload{
		XReferenceID: body.XReferenceID,
	}

	return v, nil
}

// BuildGetUserPayload builds the payload for the user GetUser endpoint from
// CLI flags.
func BuildGetUserPayload(userGetUserBody string) (*user.GetUserPayload, error) {
	var err error
	var body GetUserRequestBody
	{
		err = json.Unmarshal([]byte(userGetUserBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"X-Reference-Id\": \"Dolorum mollitia sit dolorem ducimus.\"\n   }'")
		}
	}
	v := &user.GetUserPayload{
		XReferenceID: body.XReferenceID,
	}

	return v, nil
}
